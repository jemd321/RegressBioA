// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegressBioA.EntityFramework;

#nullable disable

namespace RegressBioA.EntityFramework.Migrations
{
    [DbContext(typeof(ProjectsDbContext))]
    [Migration("20230317143734_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4");

            modelBuilder.Entity("RegressBioA.EntityFramework.DTOs.AnalyticalRunDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProjectDTOId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectDTOId");

                    b.ToTable("AnalyticalRuns");
                });

            modelBuilder.Entity("RegressBioA.EntityFramework.DTOs.ProjectDTO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("RegressBioA.EntityFramework.DTOs.AnalyticalRunDTO", b =>
                {
                    b.HasOne("RegressBioA.EntityFramework.DTOs.ProjectDTO", null)
                        .WithMany("AnalyticalRuns")
                        .HasForeignKey("ProjectDTOId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RegressBioA.EntityFramework.DTOs.ProjectDTO", b =>
                {
                    b.Navigation("AnalyticalRuns");
                });
#pragma warning restore 612, 618
        }
    }
}
